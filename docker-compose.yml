services:
  db0:
    image: cassandra:latest
    container_name: cassandra-0
    volumes:
      - cassandra-0:/var/lib/cassandra
    networks:
      - docker_network
    environment:
      - CASSANDRA_CLUSTER_NAME=db_cluster
      - CASSANDRA_SEEDS=db0
      - CASSANDRA_START_RPC=true
      - CASSANDRA_BROADCAST_ADDRESS=db0
      - CASSANDRA_LISTEN_ADDRESS=db0
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'SELECT now() FROM system.local;'"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure

  db1:
    image: cassandra:latest
    container_name: cassandra-1
    volumes:
      - cassandra-1:/var/lib/cassandra
    networks:
      - docker_network
    environment:
      - CASSANDRA_CLUSTER_NAME=db_cluster
      - CASSANDRA_SEEDS=db0
      - CASSANDRA_START_RPC=true
      - CASSANDRA_BROADCAST_ADDRESS=db1
      - CASSANDRA_LISTEN_ADDRESS=db1
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'SELECT now() FROM system.local;'"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure

  web:
    build: ./web
    container_name: web-0
    command: >
      sh -c "python manage.py sync_cassandra && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./web:/code
    ports:
      - "8000:8000"
    depends_on:
      db0:
        condition: service_healthy
      db1:
        condition: service_healthy
    networks:
      - docker_network
    healthcheck:
      test: ["CMD", "python", "healthcheck.py"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure

  classifier:
    build: ./classifier
    container_name: classifier-0
    command: python classifier.py runserver 8001
    volumes:
      - ./classifier:/code
    ports:
      - "8001:8001"
    depends_on:
      db0:
        condition: service_healthy
      db1:
        condition: service_healthy
    networks:
      - docker_network
    healthcheck:
      test: ["CMD", "python", "healthcheck.py"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: on-failure

networks:
  docker_network:
    driver: bridge

volumes:
  cassandra-0:
  cassandra-1:
